# Решение задачи
# Оно самодостаточно, остальные модули для тестирования

def car_placement_math(rc, wc):
    '''
    Функция поиска решения (только одного!) математически

    :param rc: (int) количество красных машин (red count)
    :param wc: (int) количество белых машин (white count)
    :return: (str) строка с решением или None если решения нет.
    '''

    # Сначала обработаем исключения.
    # Символы и float вызывают ошибку,
    # мы не будем их обрабатывать, ошибка в данном случае -- корректное поведение

    # float можно отработать:
    # rc,wc=int(rc),int(wc)  # Но это может привести к неожиданному поведению. Потому не будем.

    # Как показали тесты, 0, 0 и отрицательные значения отработают и получим '' вместо None,
    # но это неявное и не предсказуемое поведение,
    # поэтому мы обработаем эти случаи явно
    if rc <= 0 or wc <= 0:
        return None

    # Сначала зададим паттерны для замощения ряда символами R и W
    if rc < wc:  # чтобы не считать дважды когда отличия во взаимной замене R и W, меняем сами паттерны замощения
        rc, wc = wc, rc
        rw = 'WR'  # паттерн когда на одну машину одного цвета приходится машина другого цвета
        rwr = 'WRW'  # паттерн когда на одну машину одного цвета приходится две машины другого цвета
    else:  # а тут паттерны останутся как есть
        rw, rwr = 'RW', 'RWR'

    # Вычислим вариант замощения -- поехали считать:
    if rc == wc:  # если красных и белых одинаково: паттерн RW
        res = rw * rc
    elif rc == 2 * wc:  # если одних ровно в два раза больше других: паттерн RWR
        res = rwr * wc
    elif rc - wc < rc / 2:  # если межу n и 2n: используем комбинацию из двух паттернов
        res = rw * (2 * wc - rc) + rwr * (rc - wc)
    else:  # Другие варианты нам не подходят -- решения нет
        res = None
    return res


def main():
    # на вход два числа, красных машин X и белых Y
    # в ответ какая-нибудь строка содержащая X -- R и Y -- W без пробелов,
    # так, чтобы с одной машиной одного цвета рядом стояла хотя бы одна машина другого цвета
    # важно -- находим только одно подходящее решение
    # help(car_placement_math)
    x = int(input('Введите количество красных машин, X='))
    y = int(input('Введите количество белых машин, Y='))
    res = car_placement_math(x, y)
    print(res if res is not None else 'Нет решения')


if __name__ == '__main__':
    main()
